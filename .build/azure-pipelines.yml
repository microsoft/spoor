jobs:
- job: build_and_test
  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-20.04'
      mac:
        imageName: 'macos-10.15'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: bazel build //...
    displayName: Build
  - script: bazel test //...
    displayName: Test
  - script: ./toolchain/benchmark/run_benchmarks.sh
    displayName: Benchmark
  - script: ./toolchain/compilation_database/generate_compilation_database.sh
    displayName: Generate compilation database
  - script: bazel test --config=asan //...
    displayName: Address sanitizer
  - script: bazel test --config=tsan //...
    displayName: Thread sanitizer
  - script: bazel test --config=ubsan //...
    displayName: Undefined behavior sanitizer
    condition: eq(variables['Agent.OS'], 'Linux')
- job: style_and_lint
  pool:
    vmImage: 'macos-10.15'
  steps:
  - template: ./templates/install-common.yml
  - script: |
      ./toolchain/style/clang_format.sh
      git diff --exit-code
    displayName: Clang Format
  - script: |
      bazel run //toolchain/style:buildifier
      git diff --exit-code
    displayName: Buildifier
  - script: ./toolchain/style/clang_tidy.sh
    displayName: Clang Tidy
    env:
      AZURE_PIPELINES_OS: $(Agent.OS)
