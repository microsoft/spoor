# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# TODO(#58): Support Linux in CI and reintroduce UBSAN (Linux only).

trigger:
- master
variables:
- group: spoor
jobs:
- job: build_and_test
  timeoutInMinutes: 90
  strategy:
    matrix:
      mac:
        imageName: 'macos-11'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: bazel build //...
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Build
  - script: bazel test //...
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Test
  - script: ./toolchain/benchmark/run_benchmarks.sh
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Benchmark
  - script: mkdocs build
    displayName: Build documentation
- job: build_and_test_llvm
  timeoutInMinutes: 90
  strategy:
    matrix:
      mac:
        imageName: 'macos-11'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: bazel build //... --crosstool_top=//toolchain/crosstool:llvm_toolchain
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Build (LLVM toolchain)
  - script: bazel test //... --crosstool_top=//toolchain/crosstool:llvm_toolchain
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Test (LLVM toolchain)
- job: address_sanitizer
  timeoutInMinutes: 90
  strategy:
    matrix:
      mac:
        imageName: 'macos-11'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: bazel test --config=asan $(bazel query 'kind(cc_.*, tests(//...))')
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Address sanitizer
- job: thread_sanitizer
  timeoutInMinutes: 90
  strategy:
    matrix:
      mac:
        imageName: 'macos-11'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: bazel test --config=tsan $(bazel query 'kind(cc_.*, tests(//...))')
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Thread sanitizer
- job: style_and_lint
  timeoutInMinutes: 90
  strategy:
    matrix:
      mac:
        imageName: 'macos-11'
  pool:
    vmImage: $(imageName)
  steps:
  - template: ./templates/install-common.yml
  - script: |
      ./toolchain/copyright_header/add_copyright_header.sh
      git diff --exit-code
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Copyright header
  - script: |
      bazel build //... \
          --aspects toolchain/style/style.bzl%format \
          --output_groups=report \
          --keep_going
      bazel run //toolchain/style:buildifier
      git diff --exit-code
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Format
  - script: |
      bazel build //... \
          --crosstool_top=//toolchain/crosstool:llvm_toolchain \
          --aspects toolchain/style/style.bzl%lint \
          --output_groups=report \
          --keep_going
    condition: and(succeeded(), eq(variables['Changes.DocumentationOnly'], 'false'))
    displayName: Lint
- job: publish_documentation
  pool:
    vmImage: ubuntu-20.04
  steps:
  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: $(github_com_id_rsa_pub)
      sshPublicKey: $(spoor_github_deploy_key_id_ed25519_pub)
      sshKeySecureFile: spoor_github_deploy_key_id_ed25519
  - script: |
      git config --local user.name 'Azure DevOps'
      git config --local user.email 'azuredevops@microsoft.com'
      git remote set-url --push origin git@github.com:microsoft/spoor.git
    displayName: Configure Git
  - script: pip3 install mkdocs-material
    displayName: Install Material for MkDocs
  - script: mkdocs gh-deploy --force
    displayName: Publish
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
